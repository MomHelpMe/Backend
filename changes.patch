diff --cc clean.sh
index 1ffb616,0fc21c2..0000000
--- a/clean.sh
+++ b/clean.sh
@@@ -11,8 -11,8 +11,13 @@@ if [ ! -z "$(docker ps -aq -f name=ngin
      docker rmi -f nginx > /dev/null 2>&1
  fi
  
++<<<<<<< Updated upstream
 +rm -rf backend/*/migrations backend/venv
 +find . -type d -name "__pycache__" -exec rm -r {} \;
++=======
+ rm -rf backend/*/migrations venv backend/.env
+ find . -type d -name "__pycache__" -exec rm -r {} +
++>>>>>>> Stashed changes
  
  for d in backend/*/; do
      if [ "$d" == "backend/transcendence/" ]; then
diff --cc run_backend.sh
index 8cb491b,ce0e34e..0000000
--- a/run_backend.sh
+++ b/run_backend.sh
@@@ -3,6 -3,7 +3,10 @@@
  # TEST: 개발 시 로컬 실행용
  
  DOT_ENV=".env"
++<<<<<<< Updated upstream
++=======
+ ENV_DIR="venv"
++>>>>>>> Stashed changes
  
  # Check if .env file exists
  if [ ! -f "$DOT_ENV" ]; then
@@@ -16,6 -17,7 +20,10 @@@ if ! docker info > /dev/null 2>&1; the
    exit 1
  fi
  
++<<<<<<< Updated upstream
++=======
+ 
++>>>>>>> Stashed changes
  # Initialize the environment (arg 1 to clear everything)
  if [ "$1" == "1" ]; then
    ./clean.sh
@@@ -35,13 -38,8 +44,18 @@@ if [ -z "$(docker ps -aq -f name=postgr
    docker run -d -p 5432:5432 --name postgres --env-file $DOT_ENV -v db_data:/var/lib/postgresql/data postgres
  fi
  
++<<<<<<< Updated upstream
 +# Update the .env file for local development
 +sed -i '' 's/^DB_HOST=.*$/DB_HOST=localhost/' $DOT_ENV
 +
 +cd backend
 +
 +ENV_DIR="venv"
 +
++=======
+ cd backend
+ 
++>>>>>>> Stashed changes
  if [ ! -d "$ENV_DIR" ]; then
    python3.12 -m venv $ENV_DIR
    echo "Virtual environment created at $ENV_DIR."
