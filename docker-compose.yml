services:
    db:
        build: ./db
        image: postgres:trancendence
        container_name:  postgres
        restart: on-failure
        environment:
            - DB_NAME=${DB_NAME}
            - DB_USER=${DB_USER}
            - DB_PASSWORD=${DB_PASSWORD}
            - DB_HOST=${DB_HOST}
            - DB_PORT=${DB_PORT}
        expose:
            - "5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        networks:
            - network

    backend:
        depends_on:
            - db
        build: ./backend
        image: backend:trancendence
        container_name: backend
        restart: on-failure
        expose:
            - "8000"
        networks:
            - network

    frontend:
        build: ./frontend
        image: frontend:trancendence
        container_name: frontend
        restart: on-failure
        expose:
            - "3000"
        networks:
            - network

    nginx:
        depends_on:
            backend:
              condition: service_healthy
            frontend:
              condition: service_healthy
        image: nginx:latest
        container_name: nginx
        restart: on-failure
        ports:
            - "80:80"
        networks:
            - network

volumes:
    postgres_data:
    
networks:
    network:
        driver: bridge
